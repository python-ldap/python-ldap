# Tox (http://tox.testrun.org/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
# Note: when updating Python versions, also change setup.py and .travis.yml
envlist = py27,py34,py35,py36,py37,py38,py39,{py2,py3}-nosasltls,doc,py3-trace,coverage-report
minver = 1.8

[testenv]
deps = coverage
passenv = WITH_GCOV
# - Enable BytesWarning
# - Turn all warnings into exceptions.
# - 'ignore:the imp module is deprecated' is required to ignore import of 'imp'
#   in distutils. Python < 3.6 use PendingDeprecationWarning; Python >= 3.6 use
#   DeprecationWarning.
# - 'ignore:lib2to3 package' for Python 3.9
commands = {envpython} -bb -Werror \
    "-Wignore:the imp module is deprecated:DeprecationWarning" \
    "-Wignore:the imp module is deprecated:PendingDeprecationWarning" \
    "-Wignore:Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working:DeprecationWarning" \
    "-Wignore:lib2to3 package is deprecated and may not be able to parse Python 3.10+:PendingDeprecationWarning" \
    -m coverage run --parallel -m unittest discover -v -s Tests -p 't_*'

[testenv:py27]
# No warnings with Python 2.7
passenv = {[testenv]passenv}
commands =
    {envpython} -m coverage run --parallel \
        -m unittest discover -v -s Tests -p 't_*'

[testenv:py34]
# No warnings with Python 3.4
passenv = {[testenv]passenv}
commands = {[testenv:py27]commands}

[testenv:py2-nosasltls]
basepython = python2
# don't install, install dependencies manually
skip_install = true
deps =
    {[testenv]deps}
    pyasn1
    pyasn1_modules
passenv = {[testenv]passenv}
setenv =
    CI_DISABLED=LDAPI:SASL:TLS
# build and install without SASL and TLS, run without LDAPI
commands =
    {envpython} setup.py clean --all
    {envpython} setup.py build_ext -UHAVE_SASL,HAVE_TLS
    {envpython} setup.py install --single-version-externally-managed --root=/
    {[testenv:py27]commands}

[testenv:py3-nosasltls]
basepython = python3
skip_install = {[testenv:py2-nosasltls]skip_install}
deps = {[testenv:py2-nosasltls]deps}
passenv = {[testenv:py2-nosasltls]passenv}
setenv = {[testenv:py2-nosasltls]setenv}
commands = {[testenv:py2-nosasltls]commands}

[testenv:py3-trace]
basepython = python3
deps = {[testenv]deps}
passenv = {[testenv]passenv}
setenv =
    PYTHON_LDAP_TRACE_LEVEL=9
    PYTHON_LDAP_TRACE_FILE={envtmpdir}/trace.log
commands = {[testenv]commands}

[testenv:pypy]
# PyPy doesn't have working setup.py test
deps = pytest
commands = {envpython} -m pytest

[testenv:pypy35]
# PyPy-5.9.0
basepython = pypy3.5
deps = {[testenv:pypy]deps}
commands = {[testenv:pypy]commands}

[testenv:coverage-report]
deps = coverage
skip_install = true
commands =
    {envpython} -m coverage combine
    {envpython} -m coverage report --show-missing
    {envpython} -m coverage html

[testenv:doc]
basepython = python3
deps =
    docutils
    markdown
    sphinx
    sphinxcontrib-spelling
commands =
    {envpython} setup.py check --restructuredtext --metadata --strict
    {envpython} -m markdown README -f {envtmpdir}/README.html
    {envpython} -m sphinx -v -W -b html -d {envtmpdir}/doctrees \
        {toxinidir}/Doc {envtmpdir}/html
    {envpython} -m sphinx -v -W -b spelling -d {envtmpdir}/doctrees \
        {toxinidir}/Doc {envtmpdir}/spelling
